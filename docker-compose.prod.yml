# version: '3.8'
# production docker-compose.yml file

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: neighbourhood_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "127.0.0.1:3307:3306"  # Only accessible from localhost
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - neighbourhood_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: neighbourhood_backend
    restart: unless-stopped
    environment:
      - DB_HOST=mysql
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - API_USERNAME=${API_USERNAME}
      - API_PASSWORD=${API_PASSWORD}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - FLASK_ENV=production
      - FLASK_DEBUG=False
    ports:
      - "127.0.0.1:5000:5000"  # Only accessible from localhost for nginx
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - neighbourhood_network

volumes:
  mysql_data:

networks:
  neighbourhood_network:
    driver: bridge
